dialog {
  --min-width: 24rem;
  --max-width: 42rem;
  --start-position: 0 calc(-50vh - 50%);
  --edge-offset: 0px;

  flex-direction: column;
  justify-content: center;
  margin: auto;
  inset: 0;
  min-width: min(var(--min-width), calc(100% - 2rem));
  max-width: min(var(--max-width), calc(100% - 2rem));

  &[open] {
    display: flex;
  }

  /* #region positions */

  &.top {
    --start-position: 0 calc(-100% - var(--edge-offset));
    margin-top: var(--edge-offset);
  }

  &.bottom {
    --start-position: 0 calc(100% + var(--edge-offset));
    margin-bottom: var(--edge-offset);
  }

  &.left {
    --start-position: calc(-100% - var(--edge-offset)) 0;
    margin-left: var(--edge-offset);
  }

  &.right {
    --start-position: calc(100% + var(--edge-offset)) 0;
    margin-right: var(--edge-offset);
  }

  /* #endregion */

  /* #region edge */

  &.edge {
    &.left,
    &.right {
      height: 100%;
      max-height: unset;
    }

    &.top,
    &.bottom {
      --content-min-width: minmax(min(var(--min-width), 100%), auto);

      grid: auto 1fr / var(--content-min-width);
      grid-template-rows: repeat(3, minmax(auto, min-content)); /* for safari */

      width: 100%;
      max-width: unset;
      min-width: unset;

      &[open] {
        display: grid;
      }

      & > * {
        max-width: var(--max-width);
      }
    }
  }

  /* #endregion */
}

/* #region display animation */

dialog {
  /* allow-discrete for overlay, display is mandatory */
  transition: all var(--ani-duration) allow-discrete;
  translate: var(--start-position);
  z-index: 1; /* for safari */

  &[open] {
    translate: inherit;
  }

  @starting-style {
    &[open] {
      translate: var(--start-position);
    }
  }

  /* speed x1.5 on close */
  &:not([open]) {
    transition-duration: calc(var(--ani-duration) / 1.5);
  }

  /* #region backdrop */

  &::backdrop {
    transition: inherit;
    transition-duration: calc(var(--ani-duration) * 2);
    background-color: transparent;
    backdrop-filter: initial;
  }

  &[open]::backdrop {
    background-color: rgb(from var(--color-black) r g b / 0.2);
    backdrop-filter: blur(var(--spacing));
  }

  @starting-style {
    &[open]::backdrop {
      background-color: transparent;
      backdrop-filter: initial;
    }
  }

  /* #endregion */
}

/* #endregion */

/* #region theme */

dialog {
  border: 0 dashed var(--color-neutral-400);

  &.edge {
    &.left {
      border-right-width: thin;
    }

    &.right {
      border-left-width: thin;
    }

    &.top {
      border-bottom-width: thin;
    }

    &.bottom {
      border-top-width: thin;
    }
  }

  &:not(.edge) {
    --edge-offset: 1rem;
    border-width: thin;
    border-radius: var(--spacing);
  }
}

dialog {
  &.edge {
    &.top,
    &.bottom {
      background-color: rgb(from canvas r g b / 0.75);
      backdrop-filter: blur(var(--spacing));

      & > * {
        background-color: canvas;
        border-inline: inherit;
        border-inline-width: thin;
      }
    }
  }
}

/* #endregion */

/* #region with-pseudo */

dialog.edge.with-pseudo {
  grid-template-areas:
    'left header right'
    'left body right'
    'left footer right';
  grid-template-columns: 1fr var(--content-min-width) 1fr;

  &:before,
  &:after {
    content: '';
    background-color: var(--color-neutral-100);
  }

  &:before {
    grid-area: left;
    border-right: thin dashed var(--color-neutral-400);
  }

  &:after {
    grid-area: right;
    border-left: thin dashed var(--color-neutral-400);
  }
}

/* #endregion */
